name: "push images on release"

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

on:
  push:
    tags:
      - v*
jobs:
  build-and-push-amd64-accelerated-bridge-cni:
    runs-on: ubuntu-22.04
    name: image push AMD64
    steps:
      - name: check out the repo
        uses: actions/checkout@v3

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: login to Docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag

      - name: build and push accelerated-bridge-cni
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ steps.docker_meta.outputs.tags }}-amd64
          file: ./Dockerfile

  build-and-push-arm64-accelerated-bridge-cni:
    runs-on: ubuntu-22.04
    name: image push ARM64
    steps:
      - name: check out the repo
        uses: actions/checkout@v3

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: login to Docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag

      - name: build and push accelerated-bridge-cni
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: |
            ${{ steps.docker_meta.outputs.tags }}-arm64
          file: ./Dockerfile.arm64

  build-and-push-ppc64le-accelerated-bridge-cni:
    runs-on: ubuntu-22.04
    name: image push ppc64le
    steps:
      - name: check out the repo
        uses: actions/checkout@v3

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: login to Docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag

      - name: build and push accelerated-bridge-cni
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: |
            ${{ steps.docker_meta.outputs.tags }}-ppc64le
          file: ./Dockerfile.ppc64le

  push-manifest:
    runs-on: ubuntu-22.04
    needs: [build-and-push-amd64-accelerated-bridge-cni,build-and-push-arm64-accelerated-bridge-cni,build-and-push-ppc64le-accelerated-bridge-cni]
    steps:
    - name: set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: docker meta
      id: docker_meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=tag

    - name: login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: create manifest for multi-arch images
      run: |
        docker buildx imagetools create -t ${{ env.IMAGE_NAME }}:${{ steps.docker_meta.outputs.tags }} \
        ${{ env.IMAGE_NAME }}:${{ steps.docker_meta.outputs.tags }}-amd64 \
        ${{ env.IMAGE_NAME }}:${{ steps.docker_meta.outputs.tags }}-arm64 \
        ${{ env.IMAGE_NAME }}:${{ steps.docker_meta.outputs.tags }}-ppc64le
